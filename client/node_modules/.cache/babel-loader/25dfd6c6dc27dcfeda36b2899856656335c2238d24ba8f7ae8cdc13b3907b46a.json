{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerem\\\\OneDrive\\\\Desktop\\\\EDUX\\\\React Training\\\\deep-thoughts\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_THOUGHTS } from '../utils/queries';\nimport ThoughtList from '../components/ThoughtList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // use useQuery hook to make query request\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_THOUGHTS);\n  const thoughts = (data === null || data === void 0 ? void 0 : data.thoughts) || [];\n  console.log(thoughts);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row justify-space-between\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 mb-3\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(ThoughtList, {\n          thoughts: thoughts,\n          title: \"Some Feed for Thought(s)...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 1\n  }, this);\n};\n_s(Home, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useQuery","QUERY_THOUGHTS","ThoughtList","jsxDEV","_jsxDEV","Home","_s","loading","data","thoughts","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["C:/Users/jerem/OneDrive/Desktop/EDUX/React Training/deep-thoughts/client/src/pages/Home.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_THOUGHTS } from '../utils/queries';\r\nimport ThoughtList from '../components/ThoughtList';\r\n\r\nconst Home = () => {\r\n  // use useQuery hook to make query request\r\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\r\n  const thoughts = data?.thoughts || [];\r\nconsole.log(thoughts);\r\n\r\n  return (\r\n<main>\r\n  <div className=\"flex-row justify-space-between\">\r\n    <div className=\"col-12 mb-3\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <ThoughtList thoughts={thoughts} title=\"Some Feed for Thought(s)...\" />\r\n      )}\r\n    </div>\r\n  </div>\r\n</main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAACC,cAAc,CAAC;EAClD,MAAMQ,QAAQ,GAAG,CAAAD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,KAAI,EAAE;EACvCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EAEnB,oBACFL,OAAA;IAAAQ,QAAA,eACER,OAAA;MAAKS,SAAS,EAAC,gCAAgC;MAAAD,QAAA,eAC7CR,OAAA;QAAKS,SAAS,EAAC,aAAa;QAAAD,QAAA,EACzBL,OAAO,gBACNH,OAAA;UAAAQ,QAAA,EAAK;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAErBb,OAAA,CAACF,WAAW;UAACO,QAAQ,EAAEA,QAAS;UAACS,KAAK,EAAC;QAA6B;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACvE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEP,CAAC;AAACX,EAAA,CAnBID,IAAI;EAAA,QAEkBL,QAAQ;AAAA;AAAAmB,EAAA,GAF9Bd,IAAI;AAqBV,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}